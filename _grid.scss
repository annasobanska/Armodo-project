//== Reset css
@mixin box-sizing ($box-sizing: content-box) {
    -webkit-box-sizing: $box-sizing;
    -moz-box-sizing: $box-sizing;
    box-sizing: $box-sizing;
}

*{
    margin:0;
    padding: 0;
    @include box-sizing(border-box);
}

//== Grid system
//
//## Define your custom responsive grid.

// number of columns in a grid
$grid-columns: 12;

// gutter of grid
$grid-gutter-width: 30px;

$width-desktop: 980px;

.row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-right: -($grid-gutter-width / 2);
    margin-left: -($grid-gutter-width / 2);
}

[class^='col-']{
    position: relative;
    -webkit-box-flex: 0;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
    min-height: 1px;
    padding-right: $grid-gutter-width / 2;
    padding-left: $grid-gutter-width / 2;
}

// grid for mobile
@media(max-width: $width-desktop) {
    $i: 1;
    @while $i <= $grid-columns {
        .col-#{$i} {
            flex: 0 0 ($i / $grid-columns * 100%);
            max-width: ($i / $grid-columns * 100%);
        }
        $i: $i+1;
    }
}

//grid for desktop
@media(min-width: $width-desktop+1){
    $i: 1;
    @while $i <= $grid-columns {
        .col-md-#{$i} {
            flex: 0 0 ($i / $grid-columns * 100%);
            max-width: ($i / $grid-columns * 100%);
        }
        $i: $i+1;
    }
}

// SOLUTION WITH FOR LOOP
// //grid for mobile

// @media(max-width: $width-desktop) {
//     @for $i from 1 to $grid-columns+1 {
//     .col-sm-#{$i} {
//             flex: 0 0 ($i / $grid-columns * 100%);
//             max-width: ($i / $grid-columns * 100%);
//         }
//        $i: $i+1;
//       }
//     }

// //grid for desktop

// @media(min-width: $width-desktop){
//     @for $i from 1 to $grid-columns+1 {
//         .col-md-#{$i} {
//                 flex: 0 0 ($i / $grid-columns * 100%);
//                 max-width: ($i / $grid-columns * 100%);
//             }
//            $i: $i+1;
//           }
//       }